<?xml version="1.0" encoding="utf-8"?>
<containers:SuperPanel xmlns:fx="http://ns.adobe.com/mxml/2009" 
					   xmlns:s="library://ns.adobe.com/flex/spark" 
					   layout="vertical" width="1000" height="520"
					   allowClose="true" allowDrag="true"
					   close="PopUpManager.removePopUp(this);"
					   title="航班计划确认"
					   creationComplete="creationCompleteHandler(event)"
					   xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:containers="net.brandonmeyer.containers.*"
					   xmlns:core="smartx.flex.components.core.*" xmlns:info="com.apms.flex.modules.flight.info.*" xmlns:component="com.apms.flex.component.*" 
					   >
	<fx:Declarations>
		<mx:RemoteObject endpoint="{endpoint}" id="srvFlight" destination="{ApmsUIConst.FLIGHT_SERVICE}">
			<mx:method name="flightBatchConfirm" result="result4flightBatchConfirm(event)" 
					   fault="fault4flightBatchConfirm(event)">
			</mx:method>			
		</mx:RemoteObject>
	</fx:Declarations>
	
	<fx:Script>
		<![CDATA[
			import com.apms.flex.modules.flight.vo.FlightConstVo;
			import com.apms.flex.util.DateUtil;
			import com.apms.flex.vo.ApmsUIConst;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			
			import smartx.flex.components.assets.AssetsFileLib;
			import smartx.flex.components.basic.ClientEnviorment;
			import smartx.flex.components.core.BillListPanel;
			import smartx.flex.components.event.BillCardPanelEvent;
			import smartx.flex.components.util.OperatingTipUtil;
			import smartx.flex.components.util.SmartXMessage;
			import smartx.flex.components.vo.GlobalConst;
			
			[Bindable]
			public var endpoint:String = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_SERVICE_ENDPOINT) as String;
			
			private var user:String = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_LOGIN_USER_NAME) as String;
			
			private var flightObj:Object;
			
			//航班列表引用对象
			public var flightDataGrid:AdvDataGridPanel;
			
			//航班主键值，到港航班和离港航班
			public var fltpk_a:String = "";			
			public var fltpk_d:String = "";
			public var flightno_a:String = "";			
			public var flightno_d:String = "";
			
			[Bindable]
			public var acnum:String = "";
			[Bindable]
			public var acmodel:String = "";
			[Bindable]
			public var flightno_union:String = "";
			[Bindable]
			public var apt_union:String = "";
			[Bindable]
			public var depApt:String = "";
			[Bindable]
			public var arrApt:String = "";
			[Bindable]
			public var maintainType:String="";
			[Bindable]
			public var confirmState:String = "0";
			[Bindable]
			public var acstop:String = "";
			[Bindable]
			public var etaStr:String = "";
			[Bindable]
			public var isLockedIn:Boolean = false;
			[Bindable]
			public var flightdesc:String = "";
			
			[Bindable]
			private var queryColumns:Array = new Array();
			
			[Bindable]
			private var qrysql:String = "";
			
			[Bindable]
			private var typeArr:ArrayCollection = new ArrayCollection([
				{value:"AF",desc:"AF"},{value:"PF",desc:"PF"}
				,{value:"TR",desc:"TR"},{value:"AF+PF",desc:"AF+PF"},{value:"UNLINK",desc:"一个航后和一个航前"}
				,{value:"NON",desc:"**不维护**"}]);
			
			private var newMaintainType:String = "";
			private var maintainColumn:String = "FLTTYPE_DEP";
			private var newIsLocked:String = "0";
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				queryColumns.push("flightno");
				
				for each(var obj:Object in typeArr){
					if(obj.value == maintainType){
						cmbMaintainType.selectedItem = obj;
						break;
					}
				}
				
				if(flighAdg != null){
					flighAdg.refresh();
				}
				
			}
			
			public function set flightValue(value:Object):void{
				user = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_LOGIN_USER_NAME) as String;
				
				this.flightObj = value;
				acnum = flightObj["acnum"];
				acmodel = flightObj["acmodel"];
				flightno_union = flightObj["flightno_union"];
				apt_union = flightObj["apt_union"];
				maintainType = flightObj["maintaintype"];
				fltpk_a = flightObj["flt_pk_a"];
				fltpk_d = flightObj["flt_pk_d"];
				
				flightno_a = flightObj["flightno_a"];
				flightno_d = flightObj["flightno_d"];
				
				if(flightObj["ac_stop"] != null){
					acstop = flightObj["ac_stop"];
				}else{
					acstop = "";
				}
				
				if(flightObj["flightdesc"] != null){
					flightdesc = flightObj["flightdesc"];
				}else{
					flightdesc = "";
				}
				
				if(flightObj["eta"] != null){
					var etd:Date = flightObj["eta"] as Date;
					etaStr = DateUtil.dateToString(etd,1);
				}else{
					etaStr = "";
				}
					
				
				confirmState = flightObj["isconfirmed_name"];
				isLockedIn = flightObj["islockedin"]=="1"?true:false;

				if(cmbMaintainType != null){
					for each(var obj:Object in typeArr){
						if(obj.value == maintainType){
							cmbMaintainType.selectedItem = obj;
							break;
						}
					}
				}
				
				qrysql =  " select t.flt_pk, t.flightno, t.dep_apt_name,t.arr_apt_name";
				qrysql += " ,to_char(flt_date,'yy-mm-dd') flt_date,to_char(ctd,'mm-dd hh24:mi') ctd,to_char(cta,'mm-dd hh24:mi') cta";
				qrysql += " ,t.flttype_dep,t.flttype_arr_show,t.memo";
				qrysql += ",decode(t.isconfirmed,0,'未确认',1,'已确认') confirm_state ";
				qrysql += ",(select d.valuecn from b_dictionary d where d.classname='FLIGHTSCHEDULE' AND d.attributename='ACSTATE' AND D.VALUE=T.AC_STATE) ac_state"
				qrysql += ",t.acmodel";
				qrysql += "  from v_flight_schedule t ";
				qrysql += "  where t.cancel_flag='0' and t.ctd>sysdate-2 and t.ctd<sysdate+1     "; //查询3天内的航班
				qrysql += "    and acnum='"+acnum+"' ";
				qrysql += "  order by t.std desc ";
				
				if(flighAdg != null){
					flighAdg.refresh();
				}
			}
			
			
			protected function onOkClickHandler(event:MouseEvent):void
			{
				if(cbLocked.selected){
					newIsLocked = "1";
				}else{
					newIsLocked = "0";
				}
				
				if(cmbMaintainType.selectedItem != null){
					newMaintainType = cmbMaintainType.selectedItem.value;
				}
				
				var maintype_a:String = newMaintainType;
				var maintype_d:String = newMaintainType;
				//数据可能会被拆分成两段，前一个航后和后一个航前
				if(newMaintainType == "UNLINK" ){
					maintype_a = "AF";
					maintype_d = "PF";
				}
				
				var confirmArr:ArrayCollection = new ArrayCollection();
				if(fltpk_a != null && fltpk_a != ""){
					var arrflt:Object = new Object;
					arrflt["ISCONFIRMED"] = "1";
					arrflt["ISLOCKED"] =  newIsLocked;
					//如果是过站或AFPF，航班连接的情况，前一航班不进行锁定，否则可能会出现动态监控中查询不到的情况zhangzy 20140924
					if(maintype_a == "TR" || maintype_a == "AF+PF"){
						arrflt["ISLOCKED"] =  "0";
					}
					
					
					//如果是落地维护，则维护类型不能是PF
					if(maintype_a=="PF"){
						SmartXMessage.show("落地维护类型不能为PF");
						return;
					}
					arrflt["MAINTAINTYPE"] = maintype_a;
					arrflt["ARRDEP_TYPE"] = "ARR";
					arrflt["MAINTAINCOLUMN"] = "FLTTYPE_ARR";
					arrflt["FLTPK"] = fltpk_a;
					arrflt["ACSTOP"] = txtAcstop.text; 
					arrflt["ETA"] = dateEta.text;
					arrflt["FLIGHTDESC"] = txtFltdesc.text;
					
					arrflt["FLIGHTNO"] = flightno_a;
					arrflt["USER"] = user;//操作者
					
					confirmArr.addItem(arrflt);
				}
				
				var depflt:Object = new Object;
				if(fltpk_d != null && fltpk_d != ""){
					depflt["ISCONFIRMED"] = "1";
					depflt["ISLOCKED"] = newIsLocked;
					depflt["MAINTAINTYPE"] = maintype_d;
					//如果是起飞维护，则维护类型不能是AF
					if(maintype_d=="AF"){
						SmartXMessage.show("落地维护类型不能为AF");
						return;
					}
					depflt["ARRDEP_TYPE"] = "DEP";
					depflt["MAINTAINCOLUMN"] = "FLTTYPE_DEP";
					depflt["FLTPK"] = fltpk_d;
					depflt["ACSTOP"] = txtAcstop.text;
					depflt["FLIGHTDESC"] = txtFltdesc.text;
					depflt["FLIGHTNO"] = flightno_d;
					depflt["USER"] = user;//操作者
					
					confirmArr.addItem(depflt);
				}
				
				//TODO 后续判断提示下更改的类型是否正确
				
				srvFlight.flightBatchConfirm(confirmArr);
				OperatingTipUtil.startOperat("确认数据保存中...");
			}
			
			//	分页查询相关		begin
			private function fault4flightBatchConfirm(event:FaultEvent):void
			{
				OperatingTipUtil.endOperat();
				SmartXMessage.show("确认航班["+flightno_union+"]维护类型为["+newMaintainType+"]失败！",SmartXMessage.MESSAGE_ERROR);
			}	
			
			private function result4flightBatchConfirm(event:ResultEvent):void 
			{
				OperatingTipUtil.endOperat();
				SmartXMessage.show("确认航班["+flightno_union+"]维护类型为["+newMaintainType+"]成功！");
				PopUpManager.removePopUp(this);
				
				maintainType = flightObj["maintaintype"];
				fltpk_a = flightObj["flt_pk_a"];
				fltpk_d = flightObj["flt_pk_d"];
				
				acstop = flightObj["ac_stop"];
				flightdesc = flightObj["flightdesc"];
				
				if(flightObj["eta"] != null){
					var etd:Date = flightObj["eta"] as Date;
					etaStr = DateUtil.dateToString(etd,1);
				}else{
					etaStr = "";
				}
				
				flightObj["isconfirmed"] = "1";
				flightObj["islockedin"] = newIsLocked;
				flightObj["maintaintype"] = newMaintainType;
				flightObj["ac_stop"] = txtAcstop.text;
				flightObj["flightdesc"] = txtFltdesc.text;
				
				//更新主界面数据
				if(flightDataGrid != null){
					flightDataGrid.dataListGrid.invalidateList();
				}
			}
			
			private function rowColorFlight(item:Object, rowIndex:int,dataIndex:int, color:uint):uint{
				
				var fltpk:String = item["flt_pk"];
				
				//是当前需要确认的航班，高亮展示
				if(fltpk == fltpk_a || fltpk == fltpk_d){
					return 0xCCFF66; //淡绿色
				}
				
				return color;
			}
			
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<mx:VBox width="100%" height="100%">
		<mx:HBox width="100%" height="100%" horizontalAlign="center" paddingLeft="3" paddingRight="3">
			<component:AdvDataGridPanel id="flighAdg" width="100%" height="100%" sql="{qrysql}" searchCondVisible="true" 
										rowColorFunction="{rowColorFlight}"
										dataSource="{ApmsUIConst.DATASOURCE_APMS}" queryColumns="{queryColumns}" >
				<component:columns> 
					<mx:DataGridColumn dataField="flt_date" headerText="航班日期" width="90"/>
					<mx:DataGridColumn dataField="flightno" headerText="航班号" width="60"/>
					<mx:DataGridColumn dataField="dep_apt_name" headerText="起飞机场" width="60"/>
					<mx:DataGridColumn dataField="arr_apt_name" headerText="落地机场" width="60"/>
					<mx:DataGridColumn dataField="ctd" headerText="起飞时间" width="100"/>
					<mx:DataGridColumn dataField="cta" headerText="落地时间" width="100"/>
					<mx:DataGridColumn dataField="flttype_dep" headerText="起飞维护" width="60"/>
					<mx:DataGridColumn dataField="flttype_arr_show" headerText="落地维护" width="60"/>
					<mx:DataGridColumn dataField="ac_state" headerText="飞机状态" width="60"/>
					<mx:DataGridColumn dataField="confirm_state" headerText="确认状态" width="50"/>
					<mx:DataGridColumn dataField="acmodel" headerText="机型" width="70"/>
					<mx:DataGridColumn dataField="memo" headerText="航班备注" width="100"/>
				</component:columns>
			</component:AdvDataGridPanel>
		</mx:HBox>
		<mx:VBox width="100%" horizontalAlign="center" verticalAlign="middle" height="100%" paddingBottom="3" paddingLeft="10">
			
			<mx:HBox width="100%">
				<mx:Label text="航班号" width="60" />
				<mx:TextInput editable="false" width="130" text="{flightno_union}" fontWeight="bold" />
				<s:Spacer width="10" />
				<mx:Label text="飞机号" width="50" />
				<mx:TextInput editable="false" width="80" text="{acnum}" fontWeight="bold" />
				<s:Spacer width="10" />
				<mx:Label text="经停" width="40" />
				<mx:TextInput editable="false" width="120" text="{apt_union}" />
			</mx:HBox>
			<mx:HBox width="100%" height="35" verticalAlign="middle">
				<mx:Label text="是否确认" width="60" />
				<mx:TextInput editable="false" width="80" text="{confirmState}"  fontWeight="bold" color="red"/>
				<s:Spacer width="10" />
				<mx:Label text="维护种类" width="60" color="red"/>
				<mx:ComboBox id="cmbMaintainType" dataProvider="{typeArr}" labelField="desc" color="red" />
				
				<s:Spacer width="10" />
				<mx:CheckBox id="cbLocked" label="航班锁定" color="red" selected="{isLockedIn}" />
			</mx:HBox>
			<mx:HBox width="100%" height="35" verticalAlign="middle">
				<mx:Label text="预达时间" width="60" />
				<component:DateTimeChooser id="dateEta" editable="true" text="{etaStr}" formatterType="1"/>
				<s:Spacer width="10" />
				<mx:Label text="机位" width="40" color="red"/>
				<mx:TextInput id="txtAcstop" width="80" text="{acstop}"  fontWeight="bold" color="red"/>
			</mx:HBox>
			<mx:HBox width="100%" height="35" verticalAlign="middle">
				<mx:Label text="航班备注" width="60" />
				<mx:TextInput id="txtFltdesc" width="400" text="{flightdesc}" />
			</mx:HBox>
		</mx:VBox>
		<mx:HRule width="100%" />
		<mx:HBox width="100%" horizontalAlign="center" verticalAlign="middle" height="28">
			<mx:Button icon="{AssetsFileLib.okIcon}" label="航班确认" click="onOkClickHandler(event)" />
			<mx:Button icon="{AssetsFileLib.closeIcon}" label="取消" click="PopUpManager.removePopUp(this);" />
		</mx:HBox>
	</mx:VBox>
</containers:SuperPanel>
