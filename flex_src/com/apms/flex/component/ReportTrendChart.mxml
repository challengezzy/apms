<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 creationComplete="creationCompleteHandler(event)"
		 xmlns:mx="library://ns.adobe.com/flex/mx" width="100%" height="100%" xmlns:component="com.apms.flex.component.*">
	<fx:Script>
		<![CDATA[
			import com.apms.flex.assets.AssetsFileLib;
			import com.apms.flex.modules.ChartUtil;
			import com.apms.flex.util.DateUtil;
			
			import mx.charts.ChartItem;
			import mx.charts.HitData;
			import mx.charts.chartClasses.IAxis;
			import mx.charts.events.ChartItemEvent;
			import mx.charts.series.items.PlotSeriesItem;
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.graphics.IFill;
			import mx.managers.PopUpManager;
			
			import smartx.flex.components.basic.ClientEnviorment;
			import smartx.flex.components.basic.DeskTopFrame;
			import smartx.flex.components.util.SmartXMessage;
			
			private var desktop:DeskTopFrame = ClientEnviorment.getInstance().getVar(ClientEnviorment.DESKTOP_FRAME) as DeskTopFrame;
			
			[Bindable]
			private var changePointRadius:Number = ChartUtil.changePointRadius;			
			[Bindable]
			public var chartName:String = "图表名称";			
			[Bindable]
			public var axisX:IAxis;//横坐标	
			[Bindable]
			public var axisY:IAxis;//纵坐标
			
			[Bindable]
			public var xField:String;//X坐标字段
			[Bindable]
			public var valField:String;//原值字段
			
			/**是否可以设置原值点显示
			 * */
			[Bindable]
			public var isSetInitPoint:Boolean = true;
			
			/**是否有5点均
			 * */
			public var isAvg5:Boolean = false;//
			[Bindable]
			public var avg5Field:String;//5点均字段
			
			public var isRedLine:Boolean = false;//是否有红线值
			[Bindable]
			public var redlineField:String;//红线值字段
			
			[Bindable]
			public var solidRed:Boolean = false;
			
//			[Bindable]
//			public var sc:SolidColor=new SolidColor();
			
			public var tipFunction:Function;//点提示信息自定义函数
		
			/*样本点处理*/
			public var sampleDealFunction:Function;
			
			public var isAxisSet:Boolean = true;//是否可以设置Y坐标值范围
			public var isSlope:Boolean = false;//是否显示斜率数据
			public var isRangeChk:Boolean = false;//是否显示范围

			private var isZoom:Boolean = false;
			
			/** 判断飘点的字段,如果是飘点，该点为空心点 */
			public var pointTypeField:String = "V_POINTTYPE"; 
			
			[Bindable]
			public var changList:ArrayCollection;//切换点			
			[Bindable]
			public var allList:ArrayCollection;//普通点			
			[Bindable]
			public var slopeList:ArrayCollection;//斜率点
			
			public var insertedFunc:Function;

			//实际的坐标范围
			private var realXMin:Number;
			private var realXMax:Number;
			private var realYMin:Number;
			private var realYMax:Number;
			public var queryForReportsql:String="";
			public var rptno:String="";
			public var colorAttribute:String="";
			
			public function set xMinNum(minNum:Number):void{
				lineAxis.minimum = minNum;
			}
			
			public function set xMaxNum(maxNum:Number):void{
				lineAxis.maximum = maxNum;
				
			}
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				//为坐标轴设置默认值
				if(axisX == null)
					axisX = dayAxis;
				
				if(axisY == null)
					axisY = lineAxis;
				
				if(isRedLine == false)
					headBox.removeChild(redlineChk);
				
				if(isAvg5 == false)
					headBox.removeChild(avg5Chk);
				
				if(isSlope == false){
					headBox.removeChild(slopeChk);
				}
				
				if(tipFunction != null)
					plotChart.dataTipFunction = tipFunction;
				
				if(isAxisSet == false)
					headBox.removeChild(axisSetBox);
				
				if(isRangeChk == false)
					headBox.removeChild(rangeChk);
				
			}
			
			protected function itemDoubleClickHandler(event:ChartItemEvent):void
			{
				var hitData:HitData = event.hitData;
				var itemObj:Object = hitData.item;
				//if(hitData.contextColor==0xffff00){//如果该点是黄色则认为是告警点 
				//modify zhangzy 所有点均响应双击事件，弹出查看报文内容的窗口
					
				var msgno:String = itemObj["MSG_NO"];
				if(msgno==null){
					msgno=itemObj["msg_no"];
				}
				var dealstatus:String = itemObj["DEALSTATUS"];
				var eventtype:String = itemObj["EVENTTYPE"];
				if(eventtype == null){
					eventtype = "0";
				}
				var dealWindow:AlartMessageShowWindow = new AlartMessageShowWindow();
				//处理报文内容查看，先指定查询tel_content的sql
				if(rptno=="A21"){
					queryForReportsql = "SELECT a.*,f.TEL_CONTENT FROM V_A21LIST_VIEW a,A_ACARS_TELEGRAPH_DFD f WHERE a.MSG_NO=f.MSG_NO AND a.MSG_NO='"+msgno+"'";
				}else if(rptno=="A24"){
					queryForReportsql = "SELECT a.*,f.TEL_CONTENT FROM V_A24LIST_VIEW a,A_ACARS_TELEGRAPH_DFD f WHERE a.MSG_NO=f.MSG_NO AND a.MSG_NO='"+msgno+"'";
				}if(rptno=="A38"){
					queryForReportsql = "SELECT a.*,f.TEL_CONTENT FROM V_A38LIST_VIEW a,A_ACARS_TELEGRAPH_DFD f WHERE a.MSG_NO=f.MSG_NO AND a.MSG_NO='"+msgno+"'";
				}else if(rptno=="A13" || rptno =="R13"){
					queryForReportsql = "SELECT a.*,f.TEL_CONTENT,f.rptno FROM V_A13LIST_VIEW a,A_ACARS_TELEGRAPH_DFD f WHERE a.MSG_NO=f.MSG_NO AND a.MSG_NO='"+msgno+"'";
				}
				dealWindow.insertedFunc = insertedFunc;
				dealWindow.chartName = chartName;
				dealWindow.curObj = itemObj;
				dealWindow.msgno = msgno;
				dealWindow.dealstatus = dealstatus;
				dealWindow.eventtype = eventtype;
				dealWindow.rptno=rptno;
				dealWindow.queryForReportsql=queryForReportsql;
				
				PopUpManager.addPopUp(dealWindow,desktop,true);
				PopUpManager.centerPopUp(dealWindow);
				
			}
			
			private function fillByType(element:ChartItem, index:Number):IFill {
				var sc:SolidColor;
				if(solidRed == true){
					sc = new SolidColor(0xFF0000);//red
					pointStroke.color = 0xFF0000;
				}else{
					sc = new SolidColor(0x0000FF);//blue
					pointStroke.color = 0x0000FF;
				}
				var psItem:PlotSeriesItem = PlotSeriesItem(element);
				var itemObj:Object = psItem.item;
				
				var eventtype:String = itemObj["EVENTTYPE"] as String; //报文点类型
				var dealStatus:String = itemObj["DEALSTATUS"] as String; //告警消息处理状态，没有告警，有告警，告警已处理
				var pointType:Number = Number(itemObj[pointTypeField]);
				
				if(pointType == 1){ //如果是飘点，直接空心
					sc.alpha = 0;
					
				}else{
//					if(""!=colorAttribute){
//						var v_out:Number=new Number(itemObj[colorAttribute]);//飘点告警渲染黄色
//						if(v_out==1&&pointType==0){
//							sc.color = 0xffff00;
//						}
//					}
					//告警判断
					if(dealStatus == "1"){
						sc.color = 0x00EE00; //已处理，绿色
					}
					
					//根据事件类型，对点进行着色
					if(eventtype == "0"){
						//正常点 
						
					}else if(eventtype == "1"){
						//维修点
						sc.color = 0xFF34B3;//粉红色
					}else if(eventtype == "2"){
						//坏点
						sc.color = 0x555555;//灰色
					}
					
					if(dealStatus == "0"){
						sc.color = 0xFFFF00; //未处理，黄色
					}
				}
				if(""!=colorAttribute){
					var alarmnum:Number=new Number(itemObj[colorAttribute]);//飘点告警渲染黄色
					if(alarmnum>0){
						sc.color = 0xffff00;
					}
				}
				return sc;
			}
			
			protected function axisSetBtnclickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var min:Number = new Number(minTextInput.text);
				var max:Number = new Number(maxTextInput.text);
				
				if(max <= min){
					SmartXMessage.show("坐标值范围设置不合法！");
					return;
				}
				
				lineAxis.minimum = min;
				lineAxis.maximum = max;
				
				PopUpManager.removePopUp(axisSetWindow);
			}
			
			protected function zoomBtn_clickHandler(event:MouseEvent):void
			{
				if(isZoom){
					isZoom = false;
					zoomLinkBtn.setStyle("icon",AssetsFileLib.zoomOutIcon);
					
					dayAxis.minimum = DateUtil.parseMsToDate(realXMin);
					dayAxis.maximum = DateUtil.parseMsToDate(realXMax);
					
					lineAxis.minimum = realYMin;
					lineAxis.maximum = realYMax;
				}else{
					if(rangeSel.dLeft >= rangeSel.dRight || rangeSel.dTop <= rangeSel.dBottom){
						SmartXMessage.show("请选择要缩放的范围！");
						return ;
					}
					
					realXMin = dayAxis.minimum.getTime();
					realXMax = dayAxis.maximum.getTime();
					realYMin = lineAxis.minimum;
					realYMax = lineAxis.maximum;
					
					isZoom = true;
					zoomLinkBtn.setStyle("icon",AssetsFileLib.zoomNormalIcon);
					//重新设置坐标值
					dayAxis.minimum = DateUtil.parseMsToDate(rangeSel.dLeft);
					dayAxis.maximum = DateUtil.parseMsToDate(rangeSel.dRight);
					
					lineAxis.minimum = rangeSel.dBottom;
					lineAxis.maximum = rangeSel.dTop;
				}
				
			}
			
			protected function axisSetBtn_clickHandler(event:MouseEvent):void
			{
				PopUpManager.addPopUp(axisSetWindow,desktop,true);
				PopUpManager.centerPopUp(axisSetWindow);
			}
			
			protected function axisSetWindow_creationCompleteHandler(event:FlexEvent):void
			{
				if(minTextInput != null)
					minTextInput.text =  lineAxis.minimum + "" ;
				if(maxTextInput != null)
					maxTextInput.text = lineAxis.maximum + "";				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<mx:LinearAxis id="lineAxis" baseAtZero="false" autoAdjust="true" />
		<mx:DateTimeAxis id="dayAxis" labelUnits="days" dataUnits="days" /> 
		
		<mx:SolidColor id="blueColor" color="blue"/>
		<mx:SolidColor id="redColor" color="red"/>
		
		<s:SolidColorStroke id="pointStroke" weight="1" alpha="1"/>
		<s:SolidColorStroke id="slopeStroke" weight="1" alpha="1"/>
		<s:SolidColorStroke id="avgLineStroke" color="0x33CC66" weight="2" alpha="1"/>
		<s:SolidColorStroke id="lineStroke" weight="1" alpha="0.5"/>
		<s:SolidColorStroke id="redLineStroke" color="0xFF0000" weight="2" alpha="1"/>
		
		<mx:TitleWindow id="axisSetWindow" width="280" height="160" showCloseButton="true" layout="vertical" creationComplete="axisSetWindow_creationCompleteHandler(event)"
						title="Y坐标轴范围设置"	close="{PopUpManager.removePopUp(axisSetWindow)}" >
			<mx:HBox id="axisSetBox" width="100%" height="100%" horizontalAlign="center">
				<mx:TextInput id="minTextInput" restrict="0-9\-\." width="50" text="0"/>
				<mx:Label text="-->" />
				<mx:TextInput id="maxTextInput" restrict="0-9\-\." width="50" text="100"/>
			</mx:HBox>
			<mx:HBox width="100%" horizontalAlign="center">
				<mx:Button id="setOkBtn" label="确认" click="axisSetBtnclickHandler(event)" />
			</mx:HBox>
		</mx:TitleWindow>
		
	</fx:Declarations>
	
	<mx:HBox id="headBox" width="100%"  paddingRight="10" horizontalGap="1">                                                
		<mx:Label text="{chartName}"/>
		<mx:LinkButton id="zoomLinkBtn" click="zoomBtn_clickHandler(event)" icon="{AssetsFileLib.zoomInIcon}" toolTip="选中范围，进行图表放大" />
		<mx:LinkButton id="axisSetBtn" click="axisSetBtn_clickHandler(event)" icon="{AssetsFileLib.axisZoomIcon}" toolTip="设置图表Y轴范围" />
		<mx:Spacer width="100%"/>
		<mx:CheckBox id="slopeChk" selected="false" label="斜率" toolTip="是否显示斜率线" />
		<mx:CheckBox id="rangeChk" label="范围" selected="false" toolTip="是否显示范围"/>
		<mx:CheckBox id="redlineChk" selected="false" label="红线" />                                   
		<mx:CheckBox id="avg5Chk" selected="false" label="5点均" toolTip="是否显示5点均线" />                                                      
		<mx:CheckBox id="pointChk" selected="true" label="原值点" visible="{isSetInitPoint}"/>
	</mx:HBox>                                                                                        
	<mx:PlotChart id="plotChart" width="98%" height="240" showDataTips="true" doubleClickEnabled="true"
				  itemDoubleClick="itemDoubleClickHandler(event)" 
				  horizontalAxis="{dayAxis}" verticalAxis="{lineAxis}" >                    
		<mx:series>                                                                                     
			<mx:PlotSeries  id="changePlot" dataProvider="{changList}"   
							yField="{valField}" xField="{xField}" displayName="{chartName}"
							fill="{blueColor}" radius="{changePointRadius}"                                     
							itemRenderer="mx.charts.renderers.DiamondItemRenderer"/> 
			<mx:PlotSeries  id="allPlot" dataProvider="{allList}"
							yField="{valField}" xField="{xField}"  displayName="{chartName}"
							fillFunction="fillByType" visible="{pointChk.selected}" stroke="{pointStroke}"
 							radius="3"   
							itemRenderer="mx.charts.renderers.CircleItemRenderer"/> 
			<mx:LineSeries  id="avg5Line" dataProvider="{allList}" displayName="5点均"                    
							yField="{avg5Field}" xField="{xField}"
							visible="{avg5Chk.selected}"
							radius="1" lineStroke="{avgLineStroke}" stroke="{avgLineStroke}"/>
			<mx:LineSeries  id="rlLine" dataProvider="{allList}" displayName="红线值"
							yField="{redlineField}" xField="{xField}"
							visible="{redlineChk.selected}"
							radius="1" lineStroke="{redLineStroke}" />
			
			<mx:LineSeries  id="slopeLine" dataProvider="{slopeList}" displayName="斜率"
							yField="y" xField="x"  
							visible="{slopeChk.selected}" interpolateValues="false"
							radius="1" lineStroke="{slopeStroke}" />
			<mx:LineSeries  id="slopeLineUp" dataProvider="{slopeList}" displayName="范围上限"
							yField="upValue" xField="x"  
							visible="{rangeChk.selected}" interpolateValues="false"
							radius="1" lineStroke="{slopeStroke}" />
			<mx:LineSeries  id="slopeLineDown" dataProvider="{slopeList}" displayName="范围下限"
							yField="downValue" xField="x"  
							visible="{rangeChk.selected}" interpolateValues="false"
							radius="1" lineStroke="{slopeStroke}" />
		</mx:series>
		
		<mx:annotationElements>
			<component:RangeSelector id="rangeSel" />
		</mx:annotationElements>
	</mx:PlotChart>                                                                                   
</mx:VBox>
