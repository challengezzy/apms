<?xml version="1.0" encoding="utf-8"?>
<mx:TitleWindow xmlns:fx="http://ns.adobe.com/mxml/2009" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				xmlns:component="com.apms.flex.component.*" width="350" height="250" initialize="init()" creationComplete="creationComplete()" title="附件上传" >
	
	<fx:Metadata>		       
		[Event(name='loadDataSuccessful',type='smartx.flex.components.event.BasicEvent')]
	</fx:Metadata>
	
	<fx:Script>   
		<![CDATA[
			import com.apms.flex.component.AdvDataGridPanel;
			import com.apms.flex.vo.ApmsUIConst;
			
			import mx.collections.ArrayCollection;
			import mx.formatters.DateFormatter;
			import mx.managers.PopUpManager;
			import mx.rpc.events.FaultEvent;
			import mx.rpc.events.ResultEvent;
			import mx.rpc.remoting.RemoteObject;
			
			import smartx.flex.components.assets.AssetsFileLib;
			import smartx.flex.components.basic.ClientEnviorment;
			import smartx.flex.components.event.BasicEvent;
			import smartx.flex.components.util.OperatingTipUtil;
			import smartx.flex.components.util.SmartXMessage;
			import smartx.flex.components.vo.GlobalConst;
			
			private var destination:String = ApmsUIConst.APMS_SERVICE;
			private var apmsFormService:RemoteObject=new RemoteObject;
			private var endpoint:String  = ClientEnviorment.getInstance().getVar(ClientEnviorment.KEY_SERVICE_ENDPOINT) as String;
			
			private var fileReference:FileReference = new FileReference();
			
			[Bindable]
			public var downloadurl:String;
			[Bindable]
			public var tableName:String;
			[Bindable]
			public var uploadUser:String;
			[Bindable]
			public var fdimuId:String;
			[Bindable]
			public var TypeListBlank:Boolean;
			[Bindable]
			public var TypeListVisible:Boolean;
			[Bindable]
			public var fileListDg:AdvDataGridPanel;
			[Bindable]
			public var initTime:Date=new Date(); 
			[Bindable]
			public var fileTypeArr:ArrayCollection;
			public function init():void{
				if(TypeListBlank){
					TypeListVisible=false;
				}else{
					TypeListVisible=true;
				}
				apmsFormService.destination=destination;
				if(endpoint != null)
					apmsFormService.endpoint = endpoint;				
				apmsFormService.uploadFile.addEventListener(ResultEvent.RESULT,uploadFileOKHandler);
				apmsFormService.uploadFile.addEventListener(FaultEvent.FAULT,faultHandler);
				apmsFormService.selectFileTypeFromDictionary.addEventListener(ResultEvent.RESULT,fileTypeOKHandler);
				apmsFormService.selectFileTypeFromDictionary.addEventListener(FaultEvent.FAULT,fileTypeFaultHandler);
				//选择文件后，加载文件
				fileReference.addEventListener(Event.SELECT, selectHandler);
			}
			protected function creationComplete():void{
				apmsFormService.selectFileTypeFromDictionary();
			}
			/**
			 * 查询文件类型正确的处理结果
			 **/
			public function fileTypeOKHandler(event:ResultEvent):void{
				var fileType:Array=event.result as Array;
				fileTypeArr= new ArrayCollection();
				//var test:String=fileType.
				for(var i:int=0;i<fileType.length;i++){
					fileTypeArr.addItem(fileType[i].dataMap.valuecn);
				}
			}
			/**
			 * 查询文件类型错误的处理结果
			 **/
			public function fileTypeFaultHandler(event:FaultEvent):void{
				SmartXMessage.show("查询文件类型出错！",SmartXMessage.MESSAGE_WARN);
			}
			private function selectHandler(event:Event):void {
				fileReference.load();  //加载文件
				fileNameField.text = fileReference.name;
			}
			
			protected function btnBrows_clickHandler(event:MouseEvent):void{
				fileReference.browse();
			}
			protected function btnUpload_clickHandler(event:MouseEvent):void{
				if(fileReference.data != null){
					OperatingTipUtil.startOperat("上传中....",null);
					var fileText:String;
					fileText=fileNameField.text;
					var recordTimeVal:String=recordTime.returnTime.text;
					var maintenanceReportVal:String=maintenanceReport.text;
					if(TypeListBlank){
						maintenanceReportVal="";
					}
					
					var commentVal:String=comment.text;
					//					var templeStr:String="";
					//					var postfix:int=fileText.lastIndexOf(".");
					//					for(var i:int=0;i<postfix;i++)
					//					{
					//						templeStr+=fileText.charAt(i);
					//					}
					//					var d:DateFormatter= new DateFormatter();
					//					d.formatString="YYYYMMDD-HH-NN-SS";
					//					
					//					fileText=templeStr+d.format(new Date())+fileText.substring(fileText.lastIndexOf("."));
					apmsFormService.uploadFile(fileReference.data,fileText,downloadurl,tableName,fdimuId,uploadUser,recordTimeVal,maintenanceReportVal,commentVal);
				}else{
					SmartXMessage.show("没有选择上传的文件",SmartXMessage.MESSAGE_WARN);
				}
			}
			
			protected function uploadFileOKHandler(event:ResultEvent):void{
				OperatingTipUtil.endOperat();
				
				PopUpManager.removePopUp(this);
				fileListDg.refresh();
				SmartXMessage.show("上传成功");
			}
			
			private function faultHandler(event:FaultEvent):void{
				OperatingTipUtil.endOperat();
				SmartXMessage.show("附件上传失败",SmartXMessage.MESSAGE_ERROR,event.fault.faultString);
			}
			
		]]>   
	</fx:Script>       
	<mx:VBox width="100%" height="100%" paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5" >
		<mx:HBox>
			<mx:Label text="上传附件:"  width="75"/>
			<mx:TextInput id="fileNameField" width="143" editable="false"/>
			<mx:Button id="btnBrows" click="btnBrows_clickHandler(event)"  icon="{AssetsFileLib.browseIcon}" toolTip="选择文件" />
		</mx:HBox>
		<mx:HBox>
			<mx:Label text="产生时间:" width="75" />
			<component:DateTimeChooser id="recordTime" nowTime="{initTime}" editable="true" />
		</mx:HBox>
		<mx:HBox visible="{TypeListVisible}">
			<mx:Label text="文件类型:" width="75" />
			<mx:ComboBox id="maintenanceReport" dataProvider="{fileTypeArr}" labelField="valueCN"  />
		</mx:HBox> 	
		
		<mx:HBox>
			<mx:Label text="备注:" width="75"  />
			<mx:TextArea id="comment" width="200" height="40" />
		</mx:HBox>
		<mx:HBox width="100%" height="100%" horizontalAlign="center">
			<mx:Button id="btnUpload" click="btnUpload_clickHandler(event)" label="确定" x="145" y="60" icon="{AssetsFileLib.uploadIcon}" />
			<mx:Button id="cancelButton" label="取消" click="PopUpManager.removePopUp(this)" icon="{AssetsFileLib.closeIcon}" />
		</mx:HBox>
	</mx:VBox>
</mx:TitleWindow>
